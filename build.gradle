plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {archivesName = project.archives_base_name}

repositories {
	maven {url = 'https://maven.ladysnake.org/releases'}
	maven {
		url = 'https://maven.cafeteria.dev'
		content {includeGroup 'net.adriantodt.fabricmc'}
	}
	maven {
		url "https://maven.jamieswhiteshirt.com/libs-release"
		content {includeGroup "com.jamieswhiteshirt"}
	}
	maven {url "https://jitpack.io"}
	maven {url "https://maven.shedaniel.me/"}
	maven {url "https://maven.terraformersmc.com/"}
}

loom {
	runs {
		datagen {
			inherit server
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=astral"

			runDir "build/datagen"
		}
	}
}

sourceSets {
	main {
		resources {srcDirs += ['src/main/generated']}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "com.github.apace100:origins-fabric:v${project.origins_version}"
	modImplementation include("com.github.apace100:apoli:v${project.apoli_version}")
	modImplementation include("com.github.apace100:calio:v${project.calio_version}")
	modApi(
		"com.github.Virtuoel:Pehkui:${project.pehkui_version}",
		{exclude group: "net.fabricmc.fabric-api"}
	)
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {expand "version": project.version}
}

tasks.withType(JavaCompile).configureEach {it.options.release = 17}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {rename {"${it}_${project.archivesBaseName}"}}
}

publishing {
	publications {
		//noinspection GroovyAssignabilityCheck
		mavenJava(MavenPublication) {from components.java}
	}

	repositories {}
}
